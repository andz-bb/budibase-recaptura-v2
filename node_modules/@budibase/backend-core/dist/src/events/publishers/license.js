"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.paymentRecovered = exports.paymentFailed = exports.portalOpened = exports.checkoutSuccess = exports.checkoutOpened = exports.activated = exports.planChanged = exports.tierChanged = void 0;
const events_1 = require("../events");
const types_1 = require("@budibase/types");
function tierChanged(account, from, to) {
    return __awaiter(this, void 0, void 0, function* () {
        const properties = {
            accountId: account.accountId,
            to,
            from,
        };
        yield (0, events_1.publishEvent)(types_1.Event.LICENSE_TIER_CHANGED, properties);
    });
}
exports.tierChanged = tierChanged;
function planChanged(account, from, to) {
    return __awaiter(this, void 0, void 0, function* () {
        const properties = {
            accountId: account.accountId,
            to,
            from,
        };
        yield (0, events_1.publishEvent)(types_1.Event.LICENSE_PLAN_CHANGED, properties);
    });
}
exports.planChanged = planChanged;
function activated(account) {
    return __awaiter(this, void 0, void 0, function* () {
        const properties = {
            accountId: account.accountId,
        };
        yield (0, events_1.publishEvent)(types_1.Event.LICENSE_ACTIVATED, properties);
    });
}
exports.activated = activated;
function checkoutOpened(account) {
    return __awaiter(this, void 0, void 0, function* () {
        const properties = {
            accountId: account.accountId,
        };
        yield (0, events_1.publishEvent)(types_1.Event.LICENSE_CHECKOUT_OPENED, properties);
    });
}
exports.checkoutOpened = checkoutOpened;
function checkoutSuccess(account) {
    return __awaiter(this, void 0, void 0, function* () {
        const properties = {
            accountId: account.accountId,
        };
        yield (0, events_1.publishEvent)(types_1.Event.LICENSE_CHECKOUT_SUCCESS, properties);
    });
}
exports.checkoutSuccess = checkoutSuccess;
function portalOpened(account) {
    return __awaiter(this, void 0, void 0, function* () {
        const properties = {
            accountId: account.accountId,
        };
        yield (0, events_1.publishEvent)(types_1.Event.LICENSE_PORTAL_OPENED, properties);
    });
}
exports.portalOpened = portalOpened;
function paymentFailed(account) {
    return __awaiter(this, void 0, void 0, function* () {
        const properties = {
            accountId: account.accountId,
        };
        yield (0, events_1.publishEvent)(types_1.Event.LICENSE_PAYMENT_FAILED, properties);
    });
}
exports.paymentFailed = paymentFailed;
function paymentRecovered(account) {
    return __awaiter(this, void 0, void 0, function* () {
        const properties = {
            accountId: account.accountId,
        };
        yield (0, events_1.publishEvent)(types_1.Event.LICENSE_PAYMENT_RECOVERED, properties);
    });
}
exports.paymentRecovered = paymentRecovered;
//# sourceMappingURL=license.js.map