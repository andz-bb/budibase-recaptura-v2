import { ViewName } from "../constants";
import { Database, DatabaseQueryOpts } from "@budibase/types";
export declare function createView(db: any, viewJs: string, viewName: string): Promise<void>;
export declare const createNewUserEmailView: () => Promise<void>;
export declare const createAccountEmailView: () => Promise<void>;
export declare const createUserAppView: () => Promise<void>;
export declare const createApiKeyView: () => Promise<void>;
export declare const createUserBuildersView: () => Promise<void>;
export declare const createPlatformUserView: () => Promise<void>;
export interface QueryViewOptions {
    arrayResponse?: boolean;
}
export declare const queryView: <T>(viewName: ViewName, params: DatabaseQueryOpts, db: Database, createFunc: any, opts?: QueryViewOptions) => Promise<T | T[] | undefined>;
export declare const queryPlatformView: <T>(viewName: ViewName, params: DatabaseQueryOpts, opts?: QueryViewOptions) => Promise<T | T[] | undefined>;
export declare const queryGlobalView: <T>(viewName: ViewName, params: DatabaseQueryOpts, db?: Database, opts?: QueryViewOptions) => Promise<T | T[] | undefined>;
